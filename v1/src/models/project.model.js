const { Sequelize, DataTypes } = require("sequelize");
const sequelize = require("../setups/db");
const { v4: uuidv4 } = require('uuid');

const Project = sequelize.define('Project', {
  projectIdentifier: {
    type: DataTypes.INTEGER,
    primaryKey: true,
    autoIncrement: true,
    get() {
      return 'PR-' + String(this.getDataValue('projectIdentifier')).padStart(5, '0');
    }
  },
  projectId: {
    type: DataTypes.STRING(45),
    defaultValue: () => uuidv4().replace(/-/g, ''),
  },
  companyId: {
    type: DataTypes.STRING(45),
    allowNull: false,
  },
  projectName: DataTypes.STRING(255),
  projectCode: DataTypes.STRING(45),
  projectManagerId: DataTypes.STRING(45),
  projectType: DataTypes.STRING(45),
  projectPortfolio: DataTypes.STRING(45),
  description: DataTypes.TEXT,
  notes: DataTypes.TEXT,
  accountingYear: DataTypes.STRING(45),
  startDate: DataTypes.DATE,
  endDate: DataTypes.DATE,
  plannedDuration: DataTypes.INTEGER,
  actualStartDate: DataTypes.DATE,
  actualEndDate: DataTypes.DATE,
  actualDuration: DataTypes.INTEGER,
  TotalBudget: DataTypes.STRING(45),
  TotalExpense: DataTypes.STRING(45),
  RnDExpenseCurrentYear: DataTypes.STRING(45),
  RnDExpenseCumulative: DataTypes.STRING(45),
  RnDHoursCumulative: DataTypes.STRING(45),
  RnDHoursCurrentYear: DataTypes.STRING(45),
  NonRnDHoursCumulative: DataTypes.STRING(45),
  NonRnDHoursCurrentYear: DataTypes.STRING(45),
  uncertainHoursCumulative: DataTypes.STRING(45),
  uncertainHoursCurrentYear: DataTypes.STRING(45),
  projectsIndustry: DataTypes.STRING(45),
  natureofProject: DataTypes.STRING(45),
  EmpBlendedRatePerHour: DataTypes.STRING(45),
  successCriteria: DataTypes.STRING(45),
  techStack: DataTypes.STRING(45),
  projectStatus: DataTypes.STRING(20),
  createdBy: DataTypes.STRING(128),
  createdTime: {
    type: DataTypes.DATE,
    defaultValue: DataTypes.NOW,
  },
  modifiedBy: DataTypes.STRING(128),
  modifiedTime: {
    type: DataTypes.DATE,
    defaultValue: DataTypes.NOW,
    onUpdate: DataTypes.NOW,
  },
  sysModTime: {
    type: DataTypes.DATE,
    defaultValue: DataTypes.NOW,
  },
  sourceProjectId: DataTypes.STRING(36),
  projectManager: DataTypes.STRING(128),
  spocName: DataTypes.STRING(128),
  spocEmail: DataTypes.STRING(128),
  totalEfforts: DataTypes.FLOAT,
  totalCosts: DataTypes.FLOAT,
  totalRnDEfforts: DataTypes.FLOAT,
  totalRnDCosts: DataTypes.FLOAT,
  technicalContact: DataTypes.STRING(128),
  oldSpocName: DataTypes.STRING(128),
  oldSpocEmail: DataTypes.STRING(128),
  s_fte_cost: DataTypes.DECIMAL(18, 2),
  s_subcon_cost: DataTypes.DECIMAL(18, 2),
  s_rd_potential: DataTypes.DECIMAL(5, 2),
  s_fte_qre_cost: DataTypes.DECIMAL(18, 2),
  s_subcon_qre_cost: DataTypes.DECIMAL(18, 2),
  s_fte_subcon_qre_cost: DataTypes.DECIMAL(18, 2),
  s_qre_cost: DataTypes.DECIMAL(18, 2),
  s_rd_credits: DataTypes.DECIMAL(18, 2),
  s_project_status: DataTypes.STRING(64),
  s_data_gathering: DataTypes.STRING(64),
  s_pending_data: DataTypes.STRING(64),
  s_timesheet_status: DataTypes.STRING(64),
  s_fte_cost_status: DataTypes.STRING(64),
  s_subcon_cost_status: DataTypes.STRING(64),
  s_survey_status: DataTypes.STRING(64),
  s_last_updated_by: DataTypes.STRING(64),
  s_last_updated_timestamp: DataTypes.STRING(32),
  s_notes: DataTypes.TEXT,
  s_total_hours: DataTypes.DECIMAL(18, 2),
  s_total_project_cost: DataTypes.DECIMAL(18, 2),
  s_technical_interview_status: DataTypes.STRING(64),
  s_technical_summary_status: DataTypes.STRING(64),
  s_financial_summary_status: DataTypes.STRING(64),
  s_claims_form_status: DataTypes.STRING(64),
  s_final_review_status: DataTypes.STRING(64),
  s_interaction_status: DataTypes.STRING(64),
  s_company_name: DataTypes.STRING(255),
  s_project_code: DataTypes.STRING(128),
  s_rnd_adjustment: DataTypes.DECIMAL(18, 2),
  s_fte_hours: DataTypes.DECIMAL(18, 2),
  s_subcon_hours: DataTypes.DECIMAL(18, 2),
  s_rnd_status: DataTypes.INTEGER,
  surveyCCMails: { type: DataTypes.TEXT },
  interactionCCMails: { type: DataTypes.TEXT },
}, {
  tableName: 'projects',
  timestamps: false, // Set to true if Sequelize should manage createdAt and updatedAt
});

module.exports = Project;
